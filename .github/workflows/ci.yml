name: CI

on:
  schedule:
     - cron: '*/6 * * * *'  # Executar a cada 6 minuto
    # - cron: '0 12 * * *'  # Executar todos os dias às 12:00 (horário de São Paulo)

jobs:
  run_script_and_notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repositório
        uses: actions/checkout@v2

      - name: Configurar Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Adicionando etapas para instalar e configurar o ambiente
      - name: Instalar o Playwright globalmente
        run: |
          pip install playwright

      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          python -m pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Baixar Playwright com dependências
        run: |
          python -m playwright install

      - name: Verificar caminho do virtualenv
        run: |
          source venv/bin/activate
          echo $PATH

      - name: Verificar instalação do Playwright
        run: |
          source venv/bin/activate
          npx playwright --version

      - name: Verificar ambiente virtual
        run: |
          source venv/bin/activate
          python --version  # Verifica a versão do Python no ambiente virtual
          pip show playwright  # Verificar o local do módulo Playwright

      - name: Verificar disponibilidade do módulo
        run: |
          source venv/bin/activate
          python -c "import playwright"  # Verifica se o módulo Playwright está disponível

      - name: Executar script
        run: |
          source venv/bin/activate
          python main.py

          # Logando a saída do script para um arquivo

        env:
          CI_LOG_FILE: execution.log
          # Salvando a saída do script em um arquivo de log
        continue-on-error: true
        if: always()

      - name: Salvar saída do script no arquivo de log
        run: cat ${{ env.CI_LOG_FILE }} >> $GITHUB_ENV

      - name: Definir variável de ambiente AMOUNT
        run: |
          export AMOUNT
          echo "AMOUNT=${amount}" >> $GITHUB_ENV

      - name: Verificar se a variável AMOUNT foi exportada
        run: |
          echo $AMOUNT    

      - name: Enviar notificação por e-mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: "Notificação do Pipeline de CI"  # Assunto
          body: "Seu pipeline foi executado com sucesso! O valor da variável amount é: ${{ env.AMOUNT }}"
          to: "matheus-cmelo@hotmail.com"
          from: "${{ secrets.GMAIL_USERNAME }}"  # Endereço de e-mail do remetente
